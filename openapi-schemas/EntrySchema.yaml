openapi: 3.0.3
info:
  title: Entry schema
  description: Schema containing API specification related to entries.
  version: 1.0.0
servers:
  - url: 'http://localhost:8980/entry' # todo https?

paths:
  /add:
    post:
      operationId: addEntry
      description: "Add a new entry."
      tags:
        - entry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref:
                '#/components/schemas/EntryDTO'
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
  /investment/add:
    post:
      operationId: addInvestmentEntry
      description: "Add a new investment entry."
      tags:
        - entry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref:
                '#/components/schemas/InvestmentEntryDTO'
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
  /update:
    post:
      operationId: updateEntry
      description: "Update given entry."
      tags:
        - entry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref:
                '#/components/schemas/EntryDTO'
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
  /investment/update:
    post:
      operationId: updateInvestmentEntry
      description: "Update given investment entry."
      tags:
        - entry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref:
                '#/components/schemas/InvestmentEntryDTO'
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
  /delete/{ids}:
    delete:
      operationId: deleteEntriesByIds
      description: "Delete entries with given ids."
      parameters:
        - in: path
          name: ids
          required: true
          schema:
            type: array
            items:
              type: string
      tags:
        - entry
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
  /{budgetId}/entries:
    get:
      operationId: getEntriesByBudgetId
      description: "Get entries for budget with the given id."
      parameters:
        - name: budgetId
          in: path
          description: "Id of the budget."
          required: true
          schema:
            type: string
      tags:
        - entry
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EntryDTO"
            text/plain:
              schema:
                type: string
        "500":
          description: OK
          content:
            text/plain:
              schema:
                type: string
  /{budgetId}/investment/entries:
    get:
      operationId: getInvestmentEntriesByBudgetId
      description: "Get investment entries for budget with the given id."
      parameters:
        - name: budgetId
          in: path
          description: "Id of the budget."
          required: true
          schema:
            type: string
      tags:
        - entry
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/InvestmentEntryDTO"
            text/plain:
              schema:
                type: string
        "500":
          description: OK
          content:
            text/plain:
              schema:
                type: string

components:
  schemas:
    EntryDTO:
      required:
        - value
        - currency
        - name
        - userId
        - date
      properties:
        id:
          type: string
        value:
          type: number
        currency:
         $ref: "#/components/schemas/EntryCurrency"
        name:
          type: string
        entryType:
          $ref: "#/components/schemas/EntryType"
        userId:
          type: string
        budgetId:
         type: string
        date:
          type: string
          format: date
          example: "2022-01-01"
    EntryCurrency:
      type: string
      enum:
        - PLN
        - EUR
        - CHF
    EntryType:
      type: string
      default: expense
      enum:
        - income
        - expense
    InvestmentEntryDTO:
      required:
        - entry
        - volume
        - marketPriceAtOperation
      properties:
        id:
          type: string
        entry:
          $ref: "#/components/schemas/EntryDTO"
        volume:
          type: integer
        marketPriceAtOperation:
          type: number
        datesToMarketPrices:
          type: object
          additionalProperties:
            type: number

