openapi: 3.0.3
info:
  title: Title
  description: Title
  version: 1.0.0
servers:
  - url: 'http://localhost:8980/budget' # todo https?

paths:
  /{userId}/budgets:
    get:
      operationId: getUncategorizedBudgets
      description: "Get budgets without an assigned category for a given user."
      parameters:
        - name: userId
          in: path
          description: "Id of the currently logged in user."
          required: true
          schema:
            type: string
      tags:
        - budget
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BudgetDTO"
            text/plain:
              schema:
                type: string
        "500":
          description: OK
          content:
            text/plain:
              schema:
                type: string
  /{userId}/categories:
    get:
      operationId: getCategories
      description: "Get categories for given user."
      parameters:
        - name: userId
          in: path
          description: "Id of the currently logged in user."
          required: true
          schema:
            type: string
      tags:
        - budget
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BudgetCategoryDTO"
  /addCategory:
    post:
      operationId: addCategory
      description: "Add a new budget category."
      tags:
        - budget
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BudgetCategoryDTO"
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
  /{userId}/budgetFavorites:
    get:
      operationId: recentBudgetList
      description: "Get list of recent budget names."
      parameters:
        - name: userId
          in: path
          description: "Id of the currently logged in user."
          required: true
          schema:
            type: string
      tags:
        - budget
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /add:
    post:
      operationId: addBudget
      description: "Add a new budget to category or a new top-level budget."
      tags:
        - budget
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BudgetDTO"
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
  /update:
    post:
      operationId: updateBudget
      description: "Update given budget."
      tags:
        - budget
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref:
                '#/components/schemas/BudgetDTO'
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
  /{userId}/categories/delete/{categoryId}:
    delete:
      operationId: deleteCategory
      description: "Delete budget category with a given id."
      parameters:
        - in: path
          name: categoryId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          description: "Id of the currently logged in user"
          required: true
          schema:
            type: string
      tags:
        - budget
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
  /delete/{budgetIds}:
    delete:
      operationId: deleteBudgetsByIds
      description: "Delete budgets with given ids."
      parameters:
        - in: path
          name: budgetIds
          required: true
          schema:
            type: array
            items:
              type: string
      tags:
        - budget
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
  /{userId}/budgetSum:
    get:
      operationId: getBudgetSum
      description: "Get the total sum of budget entry values in a given currency."
      parameters:
        - name: userId
          in: path
          description: "Id of the currently logged in user"
          required: true
          schema:
            type: string
      tags:
        - singleBudget
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                currency:
                  $ref: "./EntrySchema.yaml#/components/schemas/EntryCurrency"
                budgetId: # todo maybe use budget name, since it has to be unique per user anyway?
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  sum:
                    type: number

components:
  schemas:
    BudgetCategoryDTO:
      description: "Budget category. A null name means a new uncategorized budget."
      required:
        - userId
        - name
      properties:
        userId:
          type: string
        name:
          type: string
        subcategories:
          type: array
          items:
            $ref: "#/components/schemas/BudgetCategoryDTO"
        budgets:
          type: array
          items:
            $ref: "#/components/schemas/BudgetDTO"
    BudgetDTO:
      required:
        - name
        - investment
        - userId
      properties:
        id:
          type: string
        name:
          type: string
        budgetEntries:
          type: array
          items:
            $ref: "./EntrySchema.yaml#/components/schemas/EntryDTO"
        investment:
          type: boolean
        userId:
          type: string

